import io.spring.gradle.convention.Utils

buildscript {
	repositories {
		mavenCentral()
		gradlePluginPortal()
		maven { url 'https://repo.spring.io/release' }
		maven {
			url 'https://repo.spring.io/plugins-snapshot'
			if (project.hasProperty('artifactoryUsername')) {
				credentials {
					username "$artifactoryUsername"
					password "$artifactoryPassword"
				}
			}
		}
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
	}
}

apply plugin: 'io.spring.convention.root'

allprojects {

	group = 'org.springframework.session'

	repositories {

		mavenCentral()

		if (version.contains('-')) {
			maven { url "https://repo.spring.io/milestone" }
		}
		if (version.endsWith('-SNAPSHOT')) {
			maven { url "https://repo.spring.io/snapshot" }
		}
	}

	configurations.all {
		resolutionStrategy.cacheChangingModulesFor 0, "minutes"
	}
}

description = 'Spring Session for Apache Geode'

// Define dependency version override Gradle Project extension properties.
//ext['spring.version'] = "$springVersion"
//ext['spring-framework.version'] = "$springVersion"
//ext['spring-data-bom.version'] = "$springDataBomVersion"
//ext['spring-session-bom.version'] = "$springSessionBomVersion"

// Define Gradle build in terms of the type of release (e.g. snapshot, milestone or GA release).
ext.snapshotBuild = Utils.isSnapshot(project)
ext.milestoneBuild = Utils.isMilestone(project)
ext.releaseBuild = Utils.isRelease(project)

// Declare maven-pom-editor Gradle script plugin.
ext.MAVEN_POM_EDITOR_GRADLE = "$rootDir/gradle/maven-pom-editor.gradle"

task buildScriptDependencies(type: org.gradle.api.tasks.diagnostics.DependencyReportTask) {
	configurations = project.buildscript.configurations
}
